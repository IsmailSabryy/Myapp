name: Build & Deploy myapp
on: 
  push:
    branches:
      - main
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  # Build-Phase:
  #   runs-on: ubuntu-latest
  #   needs: sonarcloud
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Setting up Podman 
  #       uses: docker/setup-buildx-action@v3
        
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18
  #     - name: Downloading Package
  #       run: npm init -y
  #     - name: Logging into docker hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}    
  #     - name: Building Container Image
  #       run: |
  #         docker build -t myapp:latest ./sample-application
  #         docker tag myapp:latest ismailsabryibm/myapp:1.0
  #     - name: Pushing Container Image
  #       run: docker push ismailsabryibm/myapp:1.0 
  
  # Deploy-Phase:
  #   runs-on: ubuntu-latest 
  #   needs: Build-Phase
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Install Minikube
  #       run: |
  #         curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
  #         chmod +x minikube
  #         sudo mv minikube /usr/local/bin/
  #     - name: Install kubectl
  #       run: |
  #         curl -LO "https://dl.k8s.io/release/v1.26.3/bin/linux/amd64/kubectl"
  #         chmod +x kubectl
  #         sudo mv kubectl /usr/local/bin/
  #     - name: Start Minikube
  #       run: |
  #         minikube start --driver=docker
  #     - name: Orchestration using Kubernetes
  #       working-directory: sample-application
  #       run: |
  #         kubectl apply -f myappdeploy.yaml 
  #         kubectl apply -f myappservice.yaml
  #         kubectl scale deployment myapp --replicas=3
  #         sleep 60
  #         kubectl get pods
